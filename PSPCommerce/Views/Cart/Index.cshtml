@model IEnumerable<PSPCommerce.Models.CartItem>

@{
    ViewData["Title"] = "Index";

    var totalPrice = Model.Sum(cart => cart._Product.Price * cart.Quantity);
}


<h1>Cart</h1>

@* <p>
    <a asp-action="Create">Create New</a>
</p> *@
<table class="table">
    <thead>
        <tr>
            <th>
                Product
            </th>
            <th>
                Price
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr class="cart-row" data-id="@item.ID" data-price="@item._Product.Price"> 
            <td>
                @Html.DisplayFor(modelItem => item._Product.Name)
                <p class="text-secondary" style="width:25vw">
                  @Html.DisplayFor(modelItem => item._Product.Description)  
                </p>
                <img src="@item._Product.ImageUrl" alt="@item._Product.Description" height="100" width="100"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item._Product.Price)
            </td>
            <td>
                <div>
                    <div class="cart-buttons" data-id="@item.ID">
                        <button id="decrement" class="btn btn-primary">
                            -
                        </button>
                        <input type="number" style="width:5vw" id="cart-quantity" value="@item.Quantity" min="1" max="100">
                        <button id="increment"  class="btn btn-primary">
                            +
                        </button>
                    </div>
                </div>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}


    </tbody>

</table>

<div>
    <div>Total Price: Rs.<span id="total-price">@totalPrice</span></div>

    <div id="payment-box">
        <h2>Checkout</h2>
        
        <form id="payment-form">
            <div class="form-group">
                <label for="cardholder-name">Cardholder Name</label>
                <input id="cardholder-name" class="form-control" type="text" />
            </div>
            <div class="form-group">
                <label for="card-element">Credit or debit card</label>
                <div id="card-element" class="form-control"></div>
            </div>
            <div class="form-group">
                <button id="submit-button" class="btn btn-primary">Pay</button>
            </div>
        </form>
    </div>
</div>



@section scripts {
    <script defer src="~/lib/jQuery-throttle-debounce/jQuery-throttle-debounce.js" asp-append-version="true"></script>
    <script defer src="~/js/cart-index.js" asp-append-version="true"></script>
    
    <script src="https://js.stripe.com/v3/"></script>
    <script>

        const stripe = Stripe("pk_test_51L6teVLq5jVwlbtcevCzKQeNuzEE8dMzMubWk0vJegT64E9aDdPTohBlN4cyLLkHciEdMrykFcJPHz8m2HuFoVN900oBQxqx9v");
        const elements = stripe.elements();
        
        // Set up card Element
        const cardElement = elements.create('card');
        cardElement.mount('#card-element');

        
        // Handle form submission
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            payWithCard(stripe, cardElement);
        });

        // Send card details to Stripe to create payment intent
        const payWithCard = async (stripe, cardElement) => {
            try {
                const res = await fetch("/order/create-payment-intent", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        amount: +100
                    })
                })
                const data = await res.json();
                const paymentIntentSecret = data["client_secret"];

                stripe.confirmCardPayment(paymentIntentSecret, {
                    payment_method: {
                        card: cardElement,
                        billing_details: {
                            name: document.getElementById('cardholder-name').value
                        }
                    }
                }).then(async function(result) {
                    if (result.error) {
                        // Show error to customer
                        alert(result.error.message);
                    } else {
                        fetch("/order/verify-payment", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                paymentId: result.paymentIntent.id
                            })
                        }).then(res => {
                            console.log(res)
                            alert("SUCCESS")
                            window.location.href = "/order"
                        }).catch(err=> {
                            alert("ERROR:PAYMENT2")
                        })
                       
                    }
                }).catch(err=> {
                    console.log("ERR",err)
                    alert("ERROR:PAYMENT")
                })
            } catch (err) {
                alert("ERROR:PAYMENT_INTENT")
            }
        }
    </script>
}